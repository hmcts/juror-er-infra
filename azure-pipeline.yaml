name: juror-er-infra
trigger:
  batch: true
  branches:
    include:
      - main

pool:
  vmImage: "ubuntu-latest"

variables:
  - name: terraformVersion
    value: "1.5.7"
  - name: SUBSCRIPTION_ID
    value: "74dacd4f-a248-45bb-a2f0-af700dc4cf68"
  - name: workingDirectory
    value: "$(System.DefaultWorkingDirectory)/components"
  - name: ARM_CLIENT_ID
    value: $(servicePrincipalId)
  - name: ARM_CLIENT_SECRET
    value: $(servicePrincipalKey)
  - name: ARM_SUBSCRIPTION_ID
    value: $(SUBSCRIPTION_ID)
  - name: ARM_TENANT_ID
    value: $(tenantId)

stages:
  - stage: Terraform
    jobs:
      - job: terraform
        steps:
          - task: TerraformInstaller@1
            displayName: "Install Terraform $(terraformVersion)"
            inputs:
              terraformVersion: $(terraformVersion)

          - task: Bash@3
            displayName: "Terraform Init"
            env:
              ARM_CLIENT_ID: $(servicePrincipalId)
              ARM_CLIENT_SECRET: $(servicePrincipalKey)
              ARM_SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(tenantId)
            inputs:
              targetType: "inline"
              script: |
                terraform init -reconfigure
              workingDirectory: $(workingDirectory)

          - task: Bash@3
            displayName: "Terraform Plan"
            env:
              ARM_CLIENT_ID: $(servicePrincipalId)
              ARM_CLIENT_SECRET: $(servicePrincipalKey)
              ARM_SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(tenantId)
            inputs:
              targetType: "inline"
              script: |
                terraform plan -out=tfplan
              workingDirectory: $(workingDirectory)

          - task: PublishPipelineArtifact@1
            displayName: "Publish Terraform Plan"
            inputs:
              targetPath: "$(workingDirectory)/tfplan"
              artifact: "terraformPlan"
              publishLocation: "pipeline"

          - task: Bash@3
            displayName: "Terraform Apply"
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
            env:
              ARM_CLIENT_ID: $(servicePrincipalId)
              ARM_CLIENT_SECRET: $(servicePrincipalKey)
              ARM_SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(tenantId)
            inputs:
              targetType: "inline"
              script: |
                terraform apply -auto-approve tfplan
              workingDirectory: $(workingDirectory)
