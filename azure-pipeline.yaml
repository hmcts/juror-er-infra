name: juror-er-infra
trigger:
  batch: true
  branches:
    include:
      - main

pr:
  branches:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: terraformVersion
    value: '1.5.7'
  - name: SUBSCRIPTION_ID
    value: '74dacd4f-a248-45bb-a2f0-af700dc4cf68'
  - name: workingDirectory
    value: '$(System.DefaultWorkingDirectory)/components'

stages:
  - stage: Terraform
    jobs:
      - job: terraform
        steps:
          - task: TerraformInstaller@1
            displayName: 'Install Terraform $(terraformVersion)'
            inputs:
              terraformVersion: $(terraformVersion)

          - task: AzureCLI@2
            displayName: 'Azure CLI Login'
            inputs:
              azureSubscription: 'DTS-SHAREDSERVICES-SBOX'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az account set --subscription $(SUBSCRIPTION_ID)
                az account show

          - task: AzureCLI@2
            displayName: 'Terraform Init'
            inputs:
              azureSubscription: 'DTS-SHAREDSERVICES-SBOX'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform init -reconfigure
              workingDirectory: $(workingDirectory)

          - task: AzureCLI@2
            displayName: 'Terraform Plan'
            inputs:
              azureSubscription: 'DTS-SHAREDSERVICES-SBOX'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform plan -out=tfplan
              workingDirectory: $(workingDirectory)

          - task: PublishPipelineArtifact@1
            displayName: 'Publish Terraform Plan'
            inputs:
              targetPath: '$(workingDirectory)/tfplan'
              artifact: 'terraformPlan'
              publishLocation: 'pipeline'


          - task: AzureCLI@2
            displayName: 'Terraform Apply'
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
            inputs:
              azureSubscription: 'DTS-SHAREDSERVICES-SBOX'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform apply -auto-approve tfplan
              workingDirectory: $(workingDirectory)