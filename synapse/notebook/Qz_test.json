{
	"name": "Qz_test",
	"properties": {
		"folder": {
			"name": "Testing"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkbaubais",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": true,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "0182bb60-9d58-4572-86a5-6f3de2471021"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/74dacd4f-a248-45bb-a2f0-af700dc4cf68/resourceGroups/baubais-data-factory-rg-stg/providers/Microsoft.Synapse/workspaces/baubais-synapse-stg/bigDataPools/sparkbaubais",
				"name": "sparkbaubais",
				"type": "Spark",
				"endpoint": "https://baubais-synapse-stg.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkbaubais",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"storage_account = \"baubaisadfsastg\"\n",
					"storage_container = \"qz-test2\"\n",
					"        # BULK 'https://baubaisadfsastg.dfs.core.windows.net/qz-test2/voters_postgresql/creation_date_partition=20251014/',\n",
					"\n",
					"file_path = f\"abfss://{storage_container}@{storage_account}.dfs.core.windows.net/voters_postgresql/creation_date_partition=20251014/\"\n",
					"df = spark.read.parquet(file_path)\n",
					""
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"source": [
					"\n",
					"\n",
					"from pyspark.sql.functions import length,lit\n",
					"\n",
					"cleaned_df = (\n",
					"    df.filter(length(df[\"lname\"]) < 20)\n",
					"      .filter(length(df[\"fname\"]) < 20)\n",
					"      .withColumn(\"address6\", lit(\"testingfield\"))\n",
					")\n",
					"# 428180\n",
					"# 428180"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"print(cleaned_df.count())\n",
					"display(cleaned_df)"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"source": [
					"df.printSchema()"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"source": [
					"target = f\"abfss://{storage_container}@{storage_account}.dfs.core.windows.net/voters_postgresql/creation_date_partition=20251016/\"\n",
					"cleaned_df.write.mode(\"overwrite\").parquet(target)"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"display(df.count())"
				],
				"execution_count": 6
			}
		]
	}
}