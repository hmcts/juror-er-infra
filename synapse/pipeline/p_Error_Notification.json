{
	"name": "p_Error_Notification",
	"properties": {
		"activities": [
			{
				"name": "Set JSON schema",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "messageCard",
					"value": {
						"value": "{\n    \"@type\": \"MessageCard\",\n    \"@context\": \"http://schema.org/extensions\",\n    \"themeColor\": \"0076D7\",\n    \"summary\": \"Pipeline status alert message​​​​\",\n    \"sections\": [\n        {\n            \"activityTitle\": \"Pipeline execution alert​​​​\",\n            \"facts\": [\n                {\n                    \"name\": \"Subscription Id:\",\n                    \"value\": \"@{pipeline().parameters.subscription}\"\n                },\n                {\n                    \"name\": \"Resource Group:\",\n                    \"value\": \"@{pipeline().parameters.resourceGroup}\"\n                },\n                {\n                    \"name\": \"Data Factory Name:\",\n                    \"value\": \"@{pipeline().DataFactory}\"\n                },\n                {\n                    \"name\": \"Pipeline RunId:\",\n                    \"value\": \"@{pipeline().parameters.runId}\"\n                },\n                {\n                    \"name\": \"Pipline Name:\",\n                    \"value\": \"@{pipeline().parameters.name}\"\n                },\n                {\n                    \"name\": \"Pipeline Status:\",\n                    \"value\": \"@{pipeline().parameters.status}\"\n                },\n                {\n                    \"name\": \"Execution Start Time (UTC):\",\n                    \"value\": \"@{pipeline().parameters.triggerTime}\"\n                },\n                {\n                    \"name\": \"Execution Finish Time (UTC):\",\n                    \"value\": \"@{pipeline().parameters.executionEndTime}\"\n                },\n                {\n                    \"name\": \"Execution Duration (s):\",\n                    \"value\": \"@{pipeline().parameters.runDuration}\"\n                },\n                {\n                    \"name\": \"Message:\",\n                    \"value\": \"@{join(variables('error files'), '\\n')}\"\n                },\n                {\n                    \"name\": \"Notification Time (UTC):\",\n                    \"value\": \"@{utcnow()}\"\n                }\n            ],\n            \"markdown\": true\n        }\n    ],\n    \"potentialAction\": [\n        {\n            \"@type\": \"OpenUri\",\n            \"name\": \"View pipeline run\",\n            \"targets\": [\n                {\n                    \"os\": \"default\",\n                    \"uri\": \"@{concat('https://adf.azure.com/monitoring/pipelineruns/',pipeline().parameters.runId,'?factory=/subscriptions/',pipeline().parameters.subscription,'/resourceGroups/',pipeline().parameters.resourceGroup,'/providers/Microsoft.DataFactory/factories/',pipeline().DataFactory)}\"\n                }\n            ]\n        }\n    ]\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Invoke Teams Webhook Url",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set JSON schema",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"httpRequestTimeout": "00:10:00",
					"url": {
						"value": "@pipeline().parameters.teamWebhookUrl",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "AutoResolveIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"body": {
						"value": "@json(variables('messageCard'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_Lake_parquet",
						"type": "DatasetReference",
						"parameters": {
							"container": "qz-test2",
							"folder": "quarantine"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"modifiedDatetimeStart": {
							"value": "@pipeline().parameters.last_modified",
							"type": "Expression"
						},
						"modifiedDatetimeEnd": null,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "ParquetReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(equals(item().type, 'Folder'))\n",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Append variable1",
										"type": "AppendVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "error files",
											"value": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"subscription": {
				"type": "string",
				"defaultValue": "sbus"
			},
			"resourceGroup": {
				"type": "string",
				"defaultValue": "rg"
			},
			"runId": {
				"type": "string",
				"defaultValue": "runid"
			},
			"name": {
				"type": "string",
				"defaultValue": "myname"
			},
			"triggerTime": {
				"type": "string",
				"defaultValue": "now"
			},
			"status": {
				"type": "string",
				"defaultValue": "failed"
			},
			"message": {
				"type": "string",
				"defaultValue": "message"
			},
			"executionEndTime": {
				"type": "string",
				"defaultValue": "now"
			},
			"runDuration": {
				"type": "string",
				"defaultValue": "tomorrow"
			},
			"teamWebhookUrl": {
				"type": "string",
				"defaultValue": "today"
			},
			"last_modified": {
				"type": "string",
				"defaultValue": "2025-10-15T21:15:55"
			}
		},
		"variables": {
			"messageCard": {
				"type": "String"
			},
			"error files": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "utils"
		},
		"annotations": []
	}
}