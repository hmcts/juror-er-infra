{
	"name": "JurorToPostgresql_Demo",
	"properties": {
		"content": {
			"query": "CREATE EXTERNAL TABLE [dbo].voters_staging_testing (\n    -- Primary identifier (let PostgreSQL generate sequence)\n    part_no                 VARCHAR(10),                    -- NULL initially, filled by PostgreSQL\n    \n    -- Voter identification\n    register_lett          VARCHAR(5),                     -- Synapse: VARCHAR(5) → PostgreSQL: VARCHAR(5)\n    poll_number            VARCHAR(5),                     -- Synapse: VARCHAR(5) → PostgreSQL: VARCHAR(5)\n    \n    -- Markers and flags\n    new_marker             VARCHAR(1),                     -- Synapse: VARCHAR(1) → PostgreSQL: VARCHAR(1)\n    flags                  VARCHAR(2),                     -- Synapse: VARCHAR(2) → PostgreSQL: VARCHAR(2)\n    \n    -- Personal details\n    title                  VARCHAR(10),                    -- Synapse: VARCHAR(10) → PostgreSQL: VARCHAR(10)\n    lname                  VARCHAR(20) NOT NULL,           -- Synapse: VARCHAR(20) → PostgreSQL: VARCHAR(20)\n    fname                  VARCHAR(20) NOT NULL,           -- Synapse: VARCHAR(20) → PostgreSQL: VARCHAR(20)\n    dob                    DATE,                           -- Synapse: DATE → PostgreSQL: DATE\n    \n    -- Address information\n    address                VARCHAR(35) NOT NULL,           -- Synapse: VARCHAR(35) → PostgreSQL: VARCHAR(35)\n    address2               VARCHAR(35),                    -- Synapse: VARCHAR(35) → PostgreSQL: VARCHAR(35)\n    address3               VARCHAR(35),                    -- Synapse: VARCHAR(35) → PostgreSQL: VARCHAR(35)\n    address4               VARCHAR(35),                    -- Synapse: VARCHAR(35) → PostgreSQL: VARCHAR(35)\n    address5               VARCHAR(35),                    -- Synapse: VARCHAR(35) → PostgreSQL: VARCHAR(35)\n    address6               VARCHAR(35),                    -- Synapse: VARCHAR(35) → PostgreSQL: VARCHAR(35)\n    zip                    VARCHAR(10),                    -- Synapse: VARCHAR(10) → PostgreSQL: VARCHAR(10)\n    postcode_start         VARCHAR(10),                    -- Generated by PostgreSQL trigger\n    \n    -- Date selections\n    date_selected1         DATE,                           -- Synapse: DATE → PostgreSQL: DATE\n    date_selected2         DATE,                           -- Synapse: DATE → PostgreSQL: DATE\n    date_selected3         DATE,                           -- Synapse: DATE → PostgreSQL: DATE\n    \n    -- Reference data\n    rec_num                INTEGER,                        -- Synapse: INT → PostgreSQL: INTEGER\n    perm_disqual           VARCHAR(1),                     -- Synapse: VARCHAR(1) → PostgreSQL: VARCHAR(1)\n    source_id              VARCHAR(1),                     -- Synapse: VARCHAR(1) → PostgreSQL: VARCHAR(1)\n    \n    -- Metadata\n    creation_date          VARCHAR(10),                    -- Synapse: VARCHAR(10) → PostgreSQL: VARCHAR(10)\n    hash_id                BIGINT,                         -- Synapse: BIGINT → PostgreSQL: BIGINT\n    \n    -- Audit fields (if needed)\n    created_at             TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at             TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\nWITH (DATA_SOURCE = [JurorEricDeltaLakeStorage], LOCATION = N'voters_deduplicated_delta/', FILE_FORMAT = [ParquetFormat], REJECT_TYPE = VALUE, REJECT_VALUE = 0 )\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "master",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}